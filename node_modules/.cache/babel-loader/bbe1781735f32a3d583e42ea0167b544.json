{"ast":null,"code":"var _jsxFileName = \"/home/rocket/Downloads/kellyservices-assignment/src/components/signin/username/username.js\";\nimport React from \"react\";\nimport { Form, Formik } from 'formik';\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MyTextField from '../../common/textfield';\nimport { verifyUsername } from '../../../actions/authentication';\nimport \"./username.scss\";\nexport default function Username() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: ''\n    },\n    validationSchema: SigninUsernameSchema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      var userNameMatch = dispatch(verifyUsername(values));\n\n      if (!passwordMatch) {\n        actions.setFieldError('password', 'Wrong password');\n      }\n\n      setTimeout(function () {\n        // dispatch(verifyUsername(values))\n        // alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 10000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, function (_ref2) {\n    var isSubmitting = _ref2.isSubmitting;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, \"hello\", JSON.stringify(isSubmitting), \"Yup\", /*#__PURE__*/React.createElement(MyTextField, {\n      name: \"username\",\n      type: \"text\",\n      label: \"Username\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, isSubmitting ? 'Verfying' : 'Next'));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centerText commonLabels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"New to Autodesk ?  \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 36\n    }\n  }, \"Create account\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer commonLabels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Your account for everything Autodesk\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Learn More\")));\n}\nvar SigninUsernameSchema = Yup.object().shape({\n  username: Yup.string().required('Please enter a valid username')\n});","map":{"version":3,"sources":["/home/rocket/Downloads/kellyservices-assignment/src/components/signin/username/username.js"],"names":["React","Form","Formik","Link","useHistory","Yup","useSelector","useDispatch","MyTextField","verifyUsername","Username","dispatch","username","SigninUsernameSchema","values","setSubmitting","userNameMatch","passwordMatch","actions","setFieldError","setTimeout","isSubmitting","JSON","stringify","object","shape","string","required"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,OAAO,iBAAP;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAGI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEK,MAAAA,QAAQ,EAAE;AAAZ,KADnB;AAEI,IAAA,gBAAgB,EAAEC,oBAFtB;AAGI,IAAA,QAAQ,EAAE,kBAACC,MAAD,QAA6B;AAAA,UAAnBC,aAAmB,QAAnBA,aAAmB;AACnC,UAAIC,aAAa,GAAGL,QAAQ,CAACF,cAAc,CAACK,MAAD,CAAf,CAA5B;;AAEA,UAAG,CAACG,aAAJ,EAAkB;AACdC,QAAAA,OAAO,CAACC,aAAR,CAAsB,UAAtB,EAAmC,gBAAnC;AACH;;AACuBC,MAAAA,UAAU,CAAC,YAAM;AACrC;AAEA;AACAL,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH,OALiC,EAK/B,KAL+B,CAAV;AAM3B,KAfL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBK;AAAA,QAAEM,YAAF,SAAEA,YAAF;AAAA,wBACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUC,IAAI,CAACC,SAAL,CAAeF,YAAf,CADV,sBAEI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,UAAlB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAyC,MAAA,KAAK,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGJ;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBA,YAAY,GAAG,UAAH,GAAgB,MAAnD,CAHI,CADH;AAAA,GAjBL,CAHJ,CADJ,eA8BI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACuB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADvB,CA9BJ,eAkCI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,eAEI;AAAG,IAAA,IAAI,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAlCJ,CADJ;AAyCH;AAED,IAAMR,oBAAoB,GAAGR,GAAG,CAACmB,MAAJ,GAAaC,KAAb,CAAmB;AAC5Cb,EAAAA,QAAQ,EAAEP,GAAG,CAACqB,MAAJ,GAAaC,QAAb,CAAsB,+BAAtB;AADkC,CAAnB,CAA7B","sourcesContent":["import React from \"react\";\nimport { Form, Formik } from 'formik';\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport MyTextField from '../../common/textfield'\nimport { verifyUsername } from '../../../actions/authentication'\nimport \"./username.scss\";\n\nexport default function Username() {\n    const dispatch = useDispatch();\n\n    return (\n        <div className='signin'>\n            <div className=\"container\">\n                <div className=\"mainTitle\">Sign in</div>\n\n                <Formik\n                    initialValues={{ username: '' }}\n                    validationSchema={SigninUsernameSchema}                      \n                    onSubmit={(values, {setSubmitting}) => {                            \n                        let userNameMatch = dispatch(verifyUsername(values))\n\n                        if(!passwordMatch){\n                            actions.setFieldError('password' , 'Wrong password')\n                        }\n                                                setTimeout(() => {\n                            // dispatch(verifyUsername(values))\n\n                            // alert(JSON.stringify(values, null, 2));\n                            setSubmitting(false);\n                        }, 10000);\n                    }}\n                >\n                    {({isSubmitting}) => (\n                        <Form>\n                            hello{JSON.stringify(isSubmitting)}Yup\n                            <MyTextField name=\"username\" type=\"text\" label=\"Username\" />\n                    <button type=\"submit\">{isSubmitting ? 'Verfying' : 'Next'}</button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n            <div className=\"centerText commonLabels\">\n                New to Autodesk ?  <Link to=\"/account\">Create account</Link>\n            </div>\n\n            <div className=\"footer commonLabels\">\n                <p>Your account for everything Autodesk</p>\n                <a href={''} >Learn More</a>\n            </div>\n        </div>\n    );\n}\n\nconst SigninUsernameSchema = Yup.object().shape({\n    username: Yup.string().required('Please enter a valid username')\n});\n"]},"metadata":{},"sourceType":"module"}