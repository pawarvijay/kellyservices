{"ast":null,"code":"import _slicedToArray from \"/home/rocket/Downloads/kellyservices-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/rocket/Downloads/kellyservices-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rocket/Downloads/kellyservices-assignment/src/components/common/Textfield/Textfield.js\";\n\nimport React from \"react\";\nimport { useField } from 'formik';\nimport \"./Textfield.scss\";\n\nvar Textfield = function Textfield(_ref) {\n  var label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 3),\n      field = _useField2[0],\n      meta = _useField2[1],\n      helpers = _useField2[2];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"labelText\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \" \", label, \" \"), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, field, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  })), meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, meta.error) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default Textfield;","map":{"version":3,"sources":["/home/rocket/Downloads/kellyservices-assignment/src/components/common/Textfield/Textfield.js"],"names":["React","useField","Textfield","label","props","field","meta","helpers","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,OAAO,kBAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAZC,KAAY;;AAAA,kBACRH,QAAQ,CAACG,KAAD,CADA;AAAA;AAAA,MAChCC,KADgC;AAAA,MACzBC,IADyB;AAAA,MACnBC,OADmB;;AAEvC,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6BJ,KAA7B,MADJ,eAGI,+CAAWE,KAAX,EAAsBD,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHJ,EAKKE,IAAI,CAACE,KAAL,gBACG;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,IAAI,CAACE,KAA7B,CADH,gBAEG;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPR,CADJ;AAWH,CAbD;;AAeA,eAAeN,SAAf","sourcesContent":["import React from \"react\";\nimport { useField } from 'formik';\n\nimport \"./Textfield.scss\";\n\nconst Textfield = ({ label, ...props }) => {\n    const [field, meta, helpers] = useField(props);\n    return (\n        <>\n            <div className=\"labelText\"> {label} </div>\n\n            <input {...field} {...props}  />\n\n            {meta.error ? (\n                <div className='error'>{meta.error}</div>\n            ) : <div className='blank'/>}\n        </>\n    );\n};\n\nexport default Textfield\n\n"]},"metadata":{},"sourceType":"module"}