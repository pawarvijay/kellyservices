{"ast":null,"code":"import _regeneratorRuntime from \"/home/rocket/Downloads/kellyservices-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/rocket/Downloads/kellyservices-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/rocket/Downloads/kellyservices-assignment/src/components/signin/password/password.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { verifyPassword, setUsernameVerification } from '../../../actions/authentication';\nimport MyTextField from '../../common/textfield';\nimport backIcon from './assets/backicon.png';\nimport Footer from '../../footer';\nimport \"./password.scss\";\nexport default function Password() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var firstName = useSelector(function (state) {\n    return state.user.firstName;\n  });\n\n  var notify = function notify() {\n    return toast.info( /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 37\n      }\n    }, \" \", 'Successfully signed in', \" \"), {\n      position: toast.POSITION.TOP_CENTER,\n      closeButton: false,\n      autoClose: 1700,\n      hideProgressBar: true\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: function onClick() {\n      return dispatch(setUsernameVerification(false));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: backIcon,\n    alt: \"backicon\",\n    className: \"backButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainTitle centerText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Welcome\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"usernameTitle centerText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, firstName), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      password: ''\n    },\n    validationSchema: SigninPasswordSchema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting,\n          setFieldError = _ref.setFieldError;\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var passwordMatch;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting(false);\n                _context.next = 3;\n                return dispatch(verifyPassword(values));\n\n              case 3:\n                passwordMatch = _context.sent;\n\n                if (passwordMatch) {\n                  _context.next = 7;\n                  break;\n                }\n\n                setFieldError('password', 'Wrong password !');\n                return _context.abrupt(\"return\");\n\n              case 7:\n                notify();\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })), 1000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, function (_ref3) {\n    var isSubmitting = _ref3.isSubmitting;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 42\n      }\n    }, /*#__PURE__*/React.createElement(MyTextField, {\n      name: \"password\",\n      type: \"text\",\n      label: \"Password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, isSubmitting ? 'Verfying' : 'Next'));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centerText commonLabels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"New to Autodesk ?  \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 36\n    }\n  }, \"Create account\")), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }));\n}\nvar SigninPasswordSchema = Yup.object().shape({\n  password: Yup.string().required('Please enter a valid password')\n});","map":{"version":3,"sources":["/home/rocket/Downloads/kellyservices-assignment/src/components/signin/password/password.js"],"names":["React","useSelector","useDispatch","Link","toast","Form","Formik","Yup","verifyPassword","setUsernameVerification","MyTextField","backIcon","Footer","Password","dispatch","firstName","state","user","notify","info","position","POSITION","TOP_CENTER","closeButton","autoClose","hideProgressBar","password","SigninPasswordSchema","values","setSubmitting","setFieldError","setTimeout","passwordMatch","isSubmitting","object","shape","string","required"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { verifyPassword, setUsernameVerification } from '../../../actions/authentication'\nimport MyTextField from '../../common/textfield'\nimport backIcon from './assets/backicon.png';\nimport Footer from '../../footer'\nimport \"./password.scss\";\n\nexport default function Password() {\n    const dispatch = useDispatch();\n    const firstName = useSelector(state => state.user.firstName)\n\n    const notify = () => toast.info(<div> {'Successfully signed in'} </div>, { position: toast.POSITION.TOP_CENTER, closeButton: false ,autoClose: 1700 , hideProgressBar : true })\n\n    return (\n        <div className='welcome'>\n            <div className=\"container\">\n\n                <span onClick={() => dispatch(setUsernameVerification(false))}>\n                    <img src={backIcon} alt=\"backicon\" className='backButton' />\n                </span>\n\n                <div className=\"mainTitle centerText\">Welcome</div>\n\n                <div className=\"usernameTitle centerText\">{firstName}</div>\n\n                <Formik\n                    initialValues={{ password: '' }}\n\n                    validationSchema={SigninPasswordSchema}\n\n                    onSubmit={(values, { setSubmitting, setFieldError }) => {\n                        setTimeout(async () => {\n                            setSubmitting(false);\n                            let passwordMatch = await dispatch(verifyPassword(values))\n                            if(!passwordMatch){\n                                setFieldError('password', 'Wrong password !')\n                                return\n                            }\n                            notify()\n                        }, 1000);\n                    }}\n                >\n                    {({isSubmitting}) => <Form>\n                        <MyTextField name=\"password\" type=\"text\" label=\"Password\" />\n                        <button type=\"submit\">{isSubmitting ? 'Verfying' : 'Next'}</button>\n                    </Form>\n                    }\n                </Formik>\n\n            </div>\n\n            <div className=\"centerText commonLabels\">\n                New to Autodesk ?  <Link to=\"/account\">Create account</Link>\n            </div>\n\n            <Footer/>\n\n\n        </div>\n    );\n}\n\nconst SigninPasswordSchema = Yup.object().shape({\n    password: Yup.string().required('Please enter a valid password')\n});\n\n"]},"metadata":{},"sourceType":"module"}