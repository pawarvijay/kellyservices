{"ast":null,"code":"import _regeneratorRuntime from \"/home/rocket/Downloads/kellyservices-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/rocket/Downloads/kellyservices-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/rocket/Downloads/kellyservices-assignment/src/components/signin/password/password.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { verifyPassword, setUsernameVerification } from '../../../actions/authentication';\nimport MyTextField from '../../common/textfield';\nimport backIcon from './assets/backicon.png';\nimport \"./password.scss\";\nexport default function Password() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var firstName = useSelector(function (state) {\n    return state.user.firstName;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: function onClick() {\n      return dispatch(setUsernameVerification(false));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: backIcon,\n    alt: \"backicon\",\n    className: \"backButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainTitle centerText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Welcome\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"usernameTitle centerText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, firstName), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      password: ''\n    },\n    validationSchema: SigninPasswordSchema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting,\n          setFieldError = _ref.setFieldError;\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var passwordMatch;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting(false);\n                _context.next = 3;\n                return dispatch(verifyPassword(values));\n\n              case 3:\n                passwordMatch = _context.sent;\n\n                if (!passwordMatch) {\n                  setFieldError('password', 'Wrong password !');\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })), 1000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, function (_ref3) {\n    var isSubmitting = _ref3.isSubmitting;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 42\n      }\n    }, console.log(props), /*#__PURE__*/React.createElement(MyTextField, {\n      name: \"password\",\n      type: \"text\",\n      label: \"Password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, isSubmitting ? 'Verfying' : 'Next'));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centerText commonLabels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"New to Autodesk ?  \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 36\n    }\n  }, \"Create account\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer commonLabels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Your account for everything Autodesk\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Learn More\")));\n}\nvar SigninPasswordSchema = Yup.object().shape({\n  password: Yup.string().required('Please enter a valid password')\n});","map":{"version":3,"sources":["/home/rocket/Downloads/kellyservices-assignment/src/components/signin/password/password.js"],"names":["React","useSelector","useDispatch","Link","Form","Formik","Yup","verifyPassword","setUsernameVerification","MyTextField","backIcon","Password","dispatch","firstName","state","user","password","SigninPasswordSchema","values","setSubmitting","setFieldError","setTimeout","passwordMatch","isSubmitting","console","log","props","object","shape","string","required"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,cAAT,EAAyBC,uBAAzB,QAAwD,iCAAxD;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,iBAAP;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,MAAMW,SAAS,GAAGZ,WAAW,CAAC,UAAAa,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWF,SAAf;AAAA,GAAN,CAA7B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAM,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,CAACJ,uBAAuB,CAAC,KAAD,CAAxB,CAAd;AAAA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEE,QAAV;AAAoB,IAAA,GAAG,EAAC,UAAxB;AAAmC,IAAA,SAAS,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAMI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,eAQI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CG,SAA3C,CARJ,eAUI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEG,MAAAA,QAAQ,EAAE;AAAZ,KADnB;AAGI,IAAA,gBAAgB,EAAEC,oBAHtB;AAKI,IAAA,QAAQ,EAAE,kBAACC,MAAD,QAA8C;AAAA,UAAnCC,aAAmC,QAAnCA,aAAmC;AAAA,UAApBC,aAAoB,QAApBA,aAAoB;AACpDC,MAAAA,UAAU,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACPF,gBAAAA,aAAa,CAAC,KAAD,CAAb;AADO;AAAA,uBAEmBP,QAAQ,CAACL,cAAc,CAACW,MAAD,CAAf,CAF3B;;AAAA;AAEHI,gBAAAA,aAFG;;AAGP,oBAAG,CAACA,aAAJ,EAAkB;AACdF,kBAAAA,aAAa,CAAC,UAAD,EAAa,kBAAb,CAAb;AACH;;AALM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD,IAMP,IANO,CAAV;AAOH,KAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeK;AAAA,QAAEG,YAAF,SAAEA,YAAF;AAAA,wBAAoB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAChBC,OAAO,CAACC,GAAR,CAAYC,KAAZ,CADgB,eAEjB,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,UAAlB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAyC,MAAA,KAAK,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFiB,eAGjB;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBH,YAAY,GAAG,UAAH,GAAgB,MAAnD,CAHiB,CAApB;AAAA,GAfL,CAVJ,CADJ,eAoCI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACuB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADvB,CApCJ,eAwCI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,eAEI;AAAG,IAAA,IAAI,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAxCJ,CADJ;AAgDH;AAED,IAAMN,oBAAoB,GAAGX,GAAG,CAACqB,MAAJ,GAAaC,KAAb,CAAmB;AAC5CZ,EAAAA,QAAQ,EAAEV,GAAG,CAACuB,MAAJ,GAAaC,QAAb,CAAsB,+BAAtB;AADkC,CAAnB,CAA7B","sourcesContent":["import React from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { verifyPassword, setUsernameVerification } from '../../../actions/authentication'\nimport MyTextField from '../../common/textfield'\nimport backIcon from './assets/backicon.png';\nimport \"./password.scss\";\n\nexport default function Password() {\n    const dispatch = useDispatch();\n    const firstName = useSelector(state => state.user.firstName)\n\n    return (\n        <div className='welcome'>\n            <div className=\"container\">\n\n                <span onClick={() => dispatch(setUsernameVerification(false))}>\n                    <img src={backIcon} alt=\"backicon\" className='backButton' />\n                </span>\n\n                <div className=\"mainTitle centerText\">Welcome</div>\n\n                <div className=\"usernameTitle centerText\">{firstName}</div>\n\n                <Formik\n                    initialValues={{ password: '' }}\n\n                    validationSchema={SigninPasswordSchema}\n\n                    onSubmit={(values, { setSubmitting, setFieldError }) => {\n                        setTimeout(async () => {\n                            setSubmitting(false);\n                            let passwordMatch = await dispatch(verifyPassword(values))\n                            if(!passwordMatch){\n                                setFieldError('password', 'Wrong password !')\n                            }\n                        }, 1000);\n                    }}\n                >\n                    {({isSubmitting}) => <Form>\n                        {console.log(props)}\n                        <MyTextField name=\"password\" type=\"text\" label=\"Password\" />\n                        <button type=\"submit\">{isSubmitting ? 'Verfying' : 'Next'}</button>\n                    </Form>\n                    }\n                </Formik>\n\n            </div>\n\n            <div className=\"centerText commonLabels\">\n                New to Autodesk ?  <Link to=\"/account\">Create account</Link>\n            </div>\n\n            <div className=\"footer commonLabels\">\n                <p>Your account for everything Autodesk</p>\n                <a href={''} >Learn More</a>\n            </div>\n\n        </div>\n    );\n}\n\nconst SigninPasswordSchema = Yup.object().shape({\n    password: Yup.string().required('Please enter a valid password')\n});\n\n"]},"metadata":{},"sourceType":"module"}