{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/rocket/Downloads/kellyservices-assignment/src/components/account/account.js\";\n\nimport React from 'react';\nimport { Form, Formik } from 'formik';\nimport { Link } from \"react-router-dom\";\nimport MyTextField from '../common/textfield';\nimport * as Yup from 'yup';\nimport \"./account.scss\"; // const matchUsername = ({username, retypeUsername}) => username.length > 1 && (username == retypeUsername) ? true : false;\n\nvar Account = function Account() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"account\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainTitle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"  Create account \"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      username: '',\n      retypeUsername: '',\n      password: '',\n      retypePassword: ''\n    },\n    validationSchema: AccountSchema,\n    onSubmit: function onSubmit(values, actions) {// if (!matchPassword(values))\n      //     setTimeout(() => {\n      //         alert(JSON.stringify(values, null, 2));\n      //         actions.setSubmitting(false);\n      //     }, 1000);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"firstnameWrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MyTextField, {\n      name: \"firstName\",\n      type: \"text\",\n      label: \"First Name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lastnameWrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MyTextField, {\n      name: \"lastName\",\n      type: \"text\",\n      label: \"Last Name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(MyTextField, {\n      name: \"username\",\n      type: \"text\",\n      label: \"Username\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(MyTextField, {\n      name: \"retypeUsername\",\n      type: \"text\",\n      label: \"Re-type username\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(MyTextField, {\n      name: \"password\",\n      type: \"text\",\n      label: \"Password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(MyTextField, {\n      name: \"retypePassword\",\n      type: \"text\",\n      label: \"Re-type password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, \"Submit\"));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centerText commonLabels alreayAccount\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Already have an account ?  \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 44\n    }\n  }, \"Signin\"))));\n};\n\nvar AccountSchema = Yup.object().shape({\n  firstName: Yup.string().required('Please enter your first name'),\n  lastName: Yup.string().required('Please enter your last name'),\n  username: Yup.string().required('Please enter valid username'),\n  retypeUsername: Yup.string().oneOf([Yup.ref('username')], 'Username does not match').required('Please retype username'),\n  password: Yup.string().required('please enter valid password'),\n  retypePassword: Yup.string().oneOf([Yup.ref('password')], 'Password does not match').required('Please retype password')\n});\nexport default Account; // is: fasle,\n// then: Yup.string().required(\"please enter same username\")","map":{"version":3,"sources":["/home/rocket/Downloads/kellyservices-assignment/src/components/account/account.js"],"names":["React","Form","Formik","Link","MyTextField","Yup","Account","firstName","lastName","username","retypeUsername","password","retypePassword","AccountSchema","values","actions","props","object","shape","string","required","oneOf","ref"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Formik } from 'formik';\nimport { Link } from \"react-router-dom\";\n\nimport MyTextField from '../common/textfield'\nimport * as Yup from 'yup';\nimport \"./account.scss\";\n\n// const matchUsername = ({username, retypeUsername}) => username.length > 1 && (username == retypeUsername) ? true : false;\n\nconst Account = () => (\n    <div className='account'>\n        <div className=\"container\">\n            <div className=\"mainTitle\">  Create account </div>\n            <Formik\n                initialValues={{\n                    firstName: '',\n                    lastName: '',\n                    username: '',\n                    retypeUsername: '',\n                    password: '',\n                    retypePassword: ''\n                }}\n\n                validationSchema={AccountSchema}\n\n                onSubmit={(values, actions) => {\n                    // if (!matchPassword(values))\n                    //     setTimeout(() => {\n                    //         alert(JSON.stringify(values, null, 2));\n                    //         actions.setSubmitting(false);\n                    //     }, 1000);\n                }}\n            >\n                {(props) => (\n                    <Form>\n                        <div className=\"firstnameWrapper\">\n                            <MyTextField name=\"firstName\" type=\"text\" label=\"First Name\" />\n                        </div>\n                        <div className='lastnameWrapper'>\n                            <MyTextField name=\"lastName\" type=\"text\" label=\"Last Name\" />\n                        </div>\n                        <MyTextField name=\"username\" type=\"text\" label=\"Username\" />\n                        <MyTextField name=\"retypeUsername\" type=\"text\" label=\"Re-type username\" />\n                        <MyTextField name=\"password\" type=\"text\" label=\"Password\" />\n                        <MyTextField name=\"retypePassword\" type=\"text\" label=\"Re-type password\" />\n                        <button type=\"submit\">Submit</button>\n                    </Form>\n                )}\n            </Formik>\n            <div className=\"centerText commonLabels alreayAccount\">\n                Already have an account ?  <Link to=\"/\">Signin</Link>\n\n            </div>\n        </div>\n    </div>\n);\n\nconst AccountSchema = Yup.object().shape({\n    firstName: Yup.string().required('Please enter your first name'),\n    lastName: Yup.string().required('Please enter your last name'),\n    username: Yup.string().required('Please enter valid username'),\n    retypeUsername: Yup.string().oneOf([Yup.ref('username')],'Username does not match').required('Please retype username'),\n    password: Yup.string().required('please enter valid password'),\n    retypePassword: Yup.string().oneOf([Yup.ref('password')],'Password does not match').required('Please retype password'),\n});\n\nexport default Account\n\n// is: fasle,\n// then: Yup.string().required(\"please enter same username\")"]},"metadata":{},"sourceType":"module"}