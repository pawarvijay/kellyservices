{"ast":null,"code":"import { SET_PASSWORD_VERIFICATION, SET_USERNAME_VERIFICATION, SAVE_USER } from '../types/types';\n\nfunction saveUser(payload) {\n  return {\n    type: SAVE_USER,\n    payload\n  };\n}\n\nfunction setPasswordVerification(payload) {\n  return {\n    type: SET_PASSWORD_VERIFICATION,\n    payload\n  };\n}\n\nfunction setUsernameVerification(payload) {\n  return {\n    type: SET_USERNAME_VERIFICATION,\n    payload\n  };\n}\n\nfunction verifyUsername(values) {\n  return function (dispatch, state) {\n    // Http server request to check username \n    if (values.username == state().user.username) {\n      alert('m');\n      dispatch(setUsernameVerification(true));\n    } else {\n      alert('NOT matched');\n    }\n  };\n}\n\nfunction verifyPassword() {\n  return function (dispatch) {\n    // Http server request to check username \n    dispatch(setPasswordVerification(true));\n  };\n}\n\nexport { saveUser, setPasswordVerification, setUsernameVerification, verifyUsername, verifyPassword };","map":{"version":3,"sources":["/home/rocket/Downloads/kellyservices-assignment/src/actions/authentication.js"],"names":["SET_PASSWORD_VERIFICATION","SET_USERNAME_VERIFICATION","SAVE_USER","saveUser","payload","type","setPasswordVerification","setUsernameVerification","verifyUsername","values","dispatch","state","username","user","alert","verifyPassword"],"mappings":"AAAA,SAASA,yBAAT,EAAoCC,yBAApC,EAA+DC,SAA/D,QAAgF,gBAAhF;;AAEA,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACvB,SAAO;AACHC,IAAAA,IAAI,EAAEH,SADH;AAEHE,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASE,uBAAT,CAAiCF,OAAjC,EAA0C;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEL,yBADH;AAEHI,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASG,uBAAT,CAAiCH,OAAjC,EAA0C;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,yBADH;AAEHG,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASI,cAAT,CAAwBC,MAAxB,EAAgC;AAC5B,SAAO,UAACC,QAAD,EAAWC,KAAX,EAAqB;AACxB;AACA,QAAGF,MAAM,CAACG,QAAP,IAAmBD,KAAK,GAAGE,IAAR,CAAaD,QAAnC,EAA4C;AACxCE,MAAAA,KAAK,CAAC,GAAD,CAAL;AACAJ,MAAAA,QAAQ,CAACH,uBAAuB,CAAC,IAAD,CAAxB,CAAR;AACH,KAHD,MAGK;AACDO,MAAAA,KAAK,CAAC,aAAD,CAAL;AACH;AACJ,GARD;AASH;;AAED,SAASC,cAAT,GAA0B;AACtB,SAAO,UAACL,QAAD,EAAc;AACjB;AACAA,IAAAA,QAAQ,CAACJ,uBAAuB,CAAC,IAAD,CAAxB,CAAR;AACH,GAHD;AAIH;;AAED,SACIH,QADJ,EAEIG,uBAFJ,EAGIC,uBAHJ,EAIIC,cAJJ,EAKIO,cALJ","sourcesContent":["import { SET_PASSWORD_VERIFICATION, SET_USERNAME_VERIFICATION, SAVE_USER } from '../types/types';\n\nfunction saveUser(payload) {\n    return {\n        type: SAVE_USER,\n        payload\n    }\n}\n\nfunction setPasswordVerification(payload) {\n    return {\n        type: SET_PASSWORD_VERIFICATION,\n        payload\n    }\n}\n\nfunction setUsernameVerification(payload) {\n    return {\n        type: SET_USERNAME_VERIFICATION,\n        payload\n    }\n}\n\nfunction verifyUsername(values) {\n    return (dispatch, state) => {\n        // Http server request to check username \n        if(values.username == state().user.username){\n            alert('m')\n            dispatch(setUsernameVerification(true))\n        }else{\n            alert('NOT matched')\n        }\n    }\n}\n\nfunction verifyPassword() {\n    return (dispatch) => {\n        // Http server request to check username \n        dispatch(setPasswordVerification(true))\n    }\n}\n\nexport {\n    saveUser,\n    setPasswordVerification,\n    setUsernameVerification,\n    verifyUsername,\n    verifyPassword\n}"]},"metadata":{},"sourceType":"module"}